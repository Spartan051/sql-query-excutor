const sql = require("./db");
const bcryptService = require("../services/bycrypt.service");
const authService = require("../services/auth.service");

function Users() {}

Users.getOne = (userData, result) => {
  const { email, password } = userData;

  if (email && password) {
    sql.query("SELECT * FROM users WHERE email=?", [email], (err, response) => {
      if (err) {
        console.log(`error : ${err}`);
      } else {
        if (!response.length) {
          result({ message: "this user not exist"});
        } else {
          console.log(response)
          if (bcryptService().comparePassword(password, response[0].password)) {
            const token = authService().issue({ id: response.id });
            result(null, {
              message: "user info has been send",
              user: response,
              token: token,
            });
          } else {
            result({ message: "password is wrong" });
          }
        }
      }
    });
  } else {
    result({ message: "email or password is empty" });
  }
};

Users.create = (newUser, result) => {
  if (newUser.password === newUser.copassword) {
    newUser.password = bcryptService().password(newUser);
console.log(newUser)
    sql.query(
      "INSERT INTO users SET ?",
      [newUser.firstname,newUser.lastname,newUser.email, newUser.password],
      (err) => {
        if (err) {
          console.log("eror : ", err);
          result(err, null);
        } else {
          console.log(`user ${newUser.firstname} is created`);
          result(null, {
            message: "user is created",
          });
        }
      }
    );
  } else {
    result({ message: "Passwords must be the same" });
  }
};

module.exports = Users;
